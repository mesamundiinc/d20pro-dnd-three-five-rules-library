<com.d20pro.temp_extraction.plugin.feature.model.script.Script>
  <description class="string">&lt;html dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body contenteditable=&quot;true&quot;&gt;Returns the spellcasting ability modifier for the current casting class.&lt;/body&gt;&lt;/html&gt;</description>
  <editable class="boolean">true</editable>
  <enabled class="boolean">true</enabled>
  <encrypted class="boolean">false</encrypted>
  <idInLib class="int">0</idInLib>
  <name class="string">getSpellcastingClassAbilityMod</name>
  <product class="string">D20PRO Core</product>
  <public class="boolean">true</public>
  <script class="string">/**&#x0D;
 * returns the casters ability mod for the casting class&#x0D;
 */&#x0D;
&#x0D;
function getSpellcastingClassAbilityMod() {&#x0D;
    print(&apos;---------spellcastingClassAbilityMod----------------------------&apos;);&#x0D;
    var className = feature.getBehavior().getFeatureUsage().getSpellDataHolder().getSpellcastingClassName();&#x0D;
    &#x0D;
    print(&apos; classname is &apos; + className);&#x0D;
    if (null === className)&#x0D;
        return null; &#x0D;
        &#x0D;
    var mod = caster.accessAbilityScoreMod( classBinder.accessClass(className).accessSpellcasting().accessAbility() );&#x0D;
    print(&apos; Mod is &apos; + mod);&#x0D;
    &#x0D;
    return (mod != -127) ? mod : 0;&#x0D;
}</script>
  <showWhenEncrypted class="boolean">true</showWhenEncrypted>
  <source class="string">Getters</source>
  <valid class="boolean">true</valid>
</com.d20pro.temp_extraction.plugin.feature.model.script.Script>